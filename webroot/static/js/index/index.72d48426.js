import{bR as r}from"../main-a0b53047.js";import{r as e}from"../katex/katex.1d9c4aa9.js";function t(r,e){e=e?Array.isArray(e)?e:[e]:[],Object.freeze(e);var t=r.renderer.rules.link_open||this.defaultRender;r.renderer.rules.link_open=function(r,n,a,c,o){var s=function(r,e){var t,n,a=r.attrs[r.attrIndex("href")][1];for(t=0;t<e.length;++t){if("function"!=typeof(n=e[t]).matcher)return n;if(n.matcher(a,n))return n}}(r[n],e),i=s&&s.attrs;return i&&function(r,e,t){Object.keys(t).forEach((function(n){var a,c=t[n];"className"===n&&(n="class"),(a=e[r].attrIndex(n))<0?e[r].attrPush([n,c]):e[r].attrs[a][1]=c}))}(n,r,i),t(r,n,a,c,o)}}t.defaultRender=function(r,e,t,n,a){return a.renderToken(r,e,t)};const n=r(t);var a=e();function c(r,e){var t,n,a=r.posMax,c=!0,o=!0;return t=e>0?r.src.charCodeAt(e-1):-1,n=e+1<=a?r.src.charCodeAt(e+1):-1,(32===t||9===t||n>=48&&n<=57)&&(o=!1),32!==n&&9!==n||(c=!1),{can_open:c,can_close:o}}function o(r,e){var t,n,a,o;if("$"!==r.src[r.pos])return!1;if(!c(r,r.pos).can_open)return e||(r.pending+="$"),r.pos+=1,!0;for(n=t=r.pos+1;-1!==(n=r.src.indexOf("$",n));){for(o=n-1;"\\"===r.src[o];)o-=1;if((n-o)%2==1)break;n+=1}return-1===n?(e||(r.pending+="$"),r.pos=t,!0):n-t===0?(e||(r.pending+="$$"),r.pos=t+1,!0):c(r,n).can_close?(e||((a=r.push("math_inline","math",0)).markup="$",a.content=r.src.slice(t,n)),r.pos=n+1,!0):(e||(r.pending+="$"),r.pos=t,!0)}function s(r,e,t,n){var a,c,o,s,i,l=!1,u=r.bMarks[e]+r.tShift[e],f=r.eMarks[e];if(u+2>f)return!1;if("$$"!==r.src.slice(u,u+2))return!1;if(u+=2,a=r.src.slice(u,f),n)return!0;for("$$"===a.trim().slice(-2)&&(a=a.trim().slice(0,-2),l=!0),o=e;!l&&!(++o>=t)&&!((u=r.bMarks[o]+r.tShift[o])<(f=r.eMarks[o])&&r.tShift[o]<r.blkIndent);)"$$"===r.src.slice(u,f).trim().slice(-2)&&(s=r.src.slice(0,f).lastIndexOf("$$"),c=r.src.slice(u,s),l=!0);return r.line=o+1,(i=r.push("math_block","math",0)).block=!0,i.content=(a&&a.trim()?a+"\n":"")+r.getLines(e+1,o,r.tShift[e],!0)+(c&&c.trim()?c:""),i.map=[e,r.line],i.markup="$$",!0}function i(r){return r.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}const l=r((function(r,e){(e=e||{}).katex&&(a=e.katex),e.blockClass||(e.blockClass="");r.inline.ruler.after("escape","math_inline",o),r.block.ruler.after("blockquote","math_block",s,{alt:["paragraph","reference","blockquote","list"]}),r.renderer.rules.math_inline=function(r,t){return function(r){e.displayMode=!1;try{return a.renderToString(r,e)}catch(t){return e.throwOnError&&console.log(t),`<span class='katex-error' title='${i(t.toString())}'>${i(r)}</span>`}}(r[t].content)},r.renderer.rules.math_block=function(r,t){return function(r){e.displayMode=!0;try{return`<p class="katex-block ${e.blockClass}">`+a.renderToString(r,e)+"</p>"}catch(t){return e.throwOnError&&console.log(t),`<p class='katex-block katex-error ${e.blockClass}' title='${i(t.toString())}'>${i(r)}</p>`}}(r[t].content)+"\n"}}));export{l as a,n as m};
